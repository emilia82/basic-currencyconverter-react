{"version":3,"sources":["currency.js","Container/index.js","Data/index.js","Result/index.js","Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["currency","name","rate","Container","children","ShowDate","useState","setTime","newDate","Date","todayDate","toLocaleDateString","weekday","day","month","year","useEffect","intervalId","setInterval","previousCount","clearInterval","className","toLocaleTimeString","Result","Form","calculateResult","result","currencies","short","amount","setAmount","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","min","step","required","App","setResult","find","sourceAmount","targetAmount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAaA,G,MAAW,CACxB,CACIC,KAAM,OACNC,KAAM,U,OCKKC,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,+BACCA,KCDQC,G,MAAW,WACpB,MAA2BC,mBAAS,GAApC,mBAAgBC,GAAhB,WACMC,EAAU,IAAIC,KACdC,EAAYF,EAAQG,mBAAoB,CAC1CC,QAAS,OACTC,IAAK,UACLC,MAAO,OACPC,KAAM,YAcV,OAVAC,qBAAU,WACN,IAAMC,EAAaC,aAAY,WAC3BX,GAAQ,SAAAY,GAAa,OAAIA,EAAgB,OAC1C,KAEH,OAAO,WACHC,cAAcH,MAEnB,IAGC,oBAAGI,UAAU,OAAb,6BACqBX,EADrB,KACkCF,EAAQc,0BChBnCC,EAPO,kBAClB,oBAAGF,UAAU,eAAb,gCAEA,wBAAQA,UAAU,eC6CPG,EAzCF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,gBACZ,GAD0C,EAAbC,OACGpB,mBAASqB,EAAW,GAAGC,QAAvD,mBAAO5B,EAAP,KACA,GADA,KAC4BM,mBAAS,KAArC,mBAAOuB,EAAP,KAAeC,EAAf,KAOA,OACI,sBAAMT,UAAU,OAAOU,SANV,SAACC,GACdA,EAAMC,iBACNR,EAAgBzB,EAAU6B,IAI1B,SACA,2BAAUR,UAAU,iBAApB,UACI,wBAAQA,UAAU,eAAlB,iCAGA,cAAC,EAAD,IACA,mBAAGA,UAAU,mBAAb,+CACI,wBAAOA,UAAU,kBAAjB,iBAEI,uBACAA,UAAU,QACVa,KAAK,SACLC,MAAON,EACPO,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAUO,EAAOF,QAC3CG,YAAY,6BACZC,IAAI,OACJC,KAAK,MACLC,UAAQ,OAEZ,mBAAGpB,UAAU,eAAb,SACI,uBACAA,UAAU,6BACVa,KAAK,SACLC,MAAM,sBCLXO,MA9Bf,WAEE,MAA4BpC,qBAA5B,mBAAeqC,GAAf,WAaA,OACE,cAAC,EAAD,UACA,qBAAKtB,UAAU,YAAf,SACD,cAAC,EAAD,CACCK,OAAQH,EACRE,gBAjBsB,SAACzB,EAAU6B,GACjC,IAAM3B,EAAOF,EACZ4C,MAAK,qBAAGhB,QAAsB5B,KAC9BE,KAEDyC,EAAU,CACRE,cAAehB,EACfiB,aAAcjB,EAAS3B,EACvBF,qBCPS+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5eae594.chunk.js","sourcesContent":["export const currency = [\r\n{\r\n    name: \"Euro\",\r\n    rate: 4.9384,\r\n}\r\n];\r\n\r\nexport default currency;","import react from 'react';\r\n\r\nconst Container = ({ children }) => (\r\n    <main>\r\n    {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import \"./style.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const ShowDate = () => {\r\n    const [counter, setTime] = useState(0);\r\n    const newDate = new Date();\r\n    const todayDate = newDate.toLocaleDateString( {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        year: \"numeric\"\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setTime(previousCount => previousCount + 1);\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []); \r\n\r\n    return (\r\n        <p className=\"date\">\r\n            Dzisiejsza data {todayDate}, {newDate.toLocaleTimeString()}\r\n        </p>\r\n    );\r\n};","import React from 'react';\r\n\r\n\r\nexport const Result = () => (\r\n    <p className=\"form__result\">\r\n    Twój wynik Euro:    \r\n    <strong className=\"result\">\r\n        </strong></p>\r\n);\r\n\r\nexport default Result;","import React, {useState} from 'react';\r\nimport './style.css';\r\nimport { currency as currencies } from '../currency'; \r\nimport Container from '../Container';\r\nimport { ShowDate } from \"../Data\";\r\nimport { Result } from \"../Result\";\r\n\r\n\r\n\r\n\r\nconst Form = ({ calculateResult, result }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n        <fieldset className=\"form__fieldset\"> \r\n            <legend className=\"form__legend\"> \r\n                Kalkulator Walutowy \r\n            </legend>\r\n            <ShowDate />\r\n            <p className=\"form__legendText\"> /pole oznaczone * jest wymagane </p>\r\n                <label className=\"form__labelText\">\r\n                    PLN*\r\n                    <input \r\n                    className=\"input\" \r\n                    type=\"number\"\r\n                    value={amount} \r\n                    onChange={({ target }) => setAmount(target.value)}\r\n                    placeholder=\"Wpisz kwotę w zł\"\r\n                    min=\"0.01\" \r\n                    step=\"any\" \r\n                    required />\r\n                </label>\r\n                <p className=\"form__button\">\r\n                    <input \r\n                    className=\"form__button--input submit\" \r\n                    type=\"submit\" \r\n                    value=\"Przelicz!\" />\r\n                </p>\r\n        </fieldset>\r\n    \r\n    </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import Form from './Form';\r\nimport Result from './Result';\r\nimport { useState } from 'react';\r\nimport Container from './Container';\r\nimport { currency } from './currency';\r\nimport \"./index.css\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const [result, setResult] = useState();\r\n  const calculateResult = (currency, amount) => {\r\n    const rate = currency \r\n    .find(({ short }) => short === currency)\r\n    .rate;\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount / rate,\r\n      currency\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n    <div className=\"container\">\r\n   <Form  \r\n    result={Result}\r\n    calculateResult={calculateResult}\r\n\r\n    />\r\n    </div>\r\n    </Container>\r\n  );\r\n};\r\n \r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}