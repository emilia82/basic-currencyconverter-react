{"version":3,"sources":["backgroundimage.jpg","GlobalStyle.js","Form/styled.js","Result/styled.js","Result/index.js","Form/index.js","Form/useRatesData.js","styled.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","background","Info","styled","label","p","theme","color","cello","LabelText","span","Fieldset","fieldset","red","Button","button","white","Header","h1","Input","input","Loading","Failure","Copyright","StyledResult","Result","result","sourceAmount","toFixed","targetAmount","currency","Form","useState","setResult","ratesData","state","setRatesData","useEffect","setTimeout","a","fetch","response","ok","Error","statusText","json","rates","date","useRatesData","setCurrency","amount","setAmount","onSubmit","event","preventDefault","rate","calculateResult","type","value","onChange","target","placeholder","min","step","required","as","Object","keys","map","Wrapper","div","blue","todayDate","toLocaleDateString","undefined","weekday","day","month","year","hour","minute","second","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","crimson","document","getElementById"],"mappings":"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","file":"static/js/main.c3cfe1a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/backgroundimage.273c0d3c.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./backgroundimage.jpg\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\n#root {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-image: url(\"${background}\");\r\n  background-position: center;\r\n  min-height: 100vh;\r\n  font-family: 'Open Sans', sans-serif;\r\n}`;","import styled from \"styled-components\";\r\n\r\nexport const Label = styled.label`\r\n    width: 100%;\r\n    max-width: 150px;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n    font-size: 25px;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n    font-size: 15px;\r\n    text-align: center;\r\n    padding: 15px;\r\n    color: ${({ theme }) => theme.color.cello};\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n    font-size: 15px;\r\n    padding: 15px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border: 3px solid ${({ theme }) => theme.color.red};\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n    margin: 5px auto;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100%;\r\n    border: none;\r\n    margin-top: 10px;\r\n    background-color: ${({ theme }) => theme.color.cello};\r\n    color: ${({ theme }) => theme.color.white};\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n    filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n    filter: brightness(130%);\r\n    }\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n    margin: 10 auto;\r\n    text-align: left;\r\n    font-size: 25px;\r\n    color: black;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Legend = styled.p`\r\n    background-color: ${({ theme }) => theme.color.cello};\r\n    color: ${({ theme }) => theme.color.white};\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    font-size: 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    font-size: 15px;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Loading = styled.p`\r\n    color: ${({ theme }) => theme.color.cello};\r\n    padding: 20px;\r\n`;\r\n\r\nexport const Failure = styled.p`\r\n    color: ${({ theme }) => theme.color.red};\r\n    padding: 20px;\r\n`;\r\n\r\nexport const Copyright = styled.p`\r\n    color: ${({ theme }) => theme.color.cello};\r\n    padding: 5px;\r\n    font-size: 20px;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p`\r\n    font-size: 25px;\r\n    padding: 15px;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-family: \"Open-Sans\", sans-serif;\r\n`;","import React from 'react';\r\nimport { StyledResult } from './styled';\r\n\r\nexport const Result = ({ result }) => (\r\n        <StyledResult> \r\n        {!!result && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=&nbsp; {\" \"}\r\n                <strong>\r\n                    {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n        </StyledResult>\r\n);\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { Loading, Failure, Info, Input, LabelText, Header, Button, Fieldset, Copyright } from \"./styled\";\r\nimport { useRatesData } from './useRatesData';\r\nimport { Result } from \"../Result\";\r\n\r\nexport const Form = () => {\r\n    const [result, setResult] = useState();\r\n    const ratesData = useRatesData();\r\n\r\n    const calculateResult = (currency, amount) => {\r\n        const rate = ratesData.rates[currency];\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetAmount: amount * rate,\r\n            currency,\r\n        });\r\n    }\r\n\r\n    const [currency, setCurrency] = useState(\"EUR\");\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <Fieldset>\r\n                <Header>\r\n                    Kalkulator Walutowy\r\n                </Header>\r\n                {ratesData.state === \"loading\"\r\n                    ? (\r\n                        <Loading>\r\n                            Sekundka... <br />Ładuję kursy walut z Europejskiego Banku Centralnego\r\n                        </Loading>\r\n                    )\r\n                    : (\r\n                        ratesData.state === \"error\" ? (\r\n\r\n                            <Failure>\r\n                                Hmmm... Coś poszło nie tak. Sprawdź czy masz połączenie z internetem.\r\n                            </Failure>\r\n                        ) : (\r\n                            <>\r\n                                <p>\r\n                                    <label>\r\n                                        <LabelText>Kwota w PLN* </LabelText>\r\n\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            value={amount}\r\n                                            onChange={({ target }) => setAmount(target.value)}\r\n                                            placeholder=\"Wpisz kwotę w zł\"\r\n                                            min=\"0.01\"\r\n                                            step=\"any\"\r\n                                            required\r\n                                        />\r\n                                    </label>\r\n                                </p>\r\n                                <p>\r\n                                    <label>\r\n                                        <LabelText>Waluta: </LabelText>\r\n                                        <Input\r\n                                            as=\"select\"\r\n                                            value={currency}\r\n                                            onChange={({ target }) => setCurrency(target.value)}\r\n                                        >\r\n                                            {Object.keys(ratesData.rates).map(((currency) => (\r\n                                                <option\r\n                                                    key={currency}\r\n                                                    value={currency}\r\n                                                >\r\n                                                    {currency}\r\n                                                </option>\r\n                                            )))}\r\n                                        </Input>\r\n                                    </label>\r\n                                </p>\r\n                                <p>\r\n                                    <Button>Przelicz</Button>\r\n                                </p>\r\n                                <Info>\r\n                                    Kursy walut pobierane są z Europejskiego Banku Centralnego.\r\n                                </Info>\r\n                                <Result result={result} />\r\n                            </>\r\n                        )\r\n                    )},\r\n            </Fieldset>\r\n            <Copyright>\r\n                Copyright - projekt wykonała Emilia Warakomska 2021\r\n            </Copyright>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        state: \"loading\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchRates = async () => {\r\n            try {\r\n                const response = await fetch(\"https://api.exchangerate.host/latest?base=PLN\");\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n\r\n                const { rates, date } = await response.json();\r\n\r\n                setRatesData({\r\n                    state: \"success\",\r\n                    rates,\r\n                    date,\r\n                });\r\n\r\n            } catch {\r\n                setRatesData({\r\n                    state: \"error\",\r\n                });\r\n            }\r\n        };\r\n\r\n        setTimeout(fetchRates, 1000);\r\n    }, []);\r\n\r\n    return ratesData;\r\n};\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    flex-basis: 800px;\r\n    margin: 15px;\r\n    padding: 0 25px;\r\n    background: ${({ theme }) => theme.color.white};\r\n    box-shadow: 0 0 10px ${({ theme }) => theme.color.blue};\r\n    border-radius: 10px;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    font-size: 15px;\r\n    display: flex;\r\n    justify-content: right;\r\n    padding: 15px;\r\n    font-family: \"Open-Sans\", sans-serif;\r\n`;","import { Wrapper } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\n\r\nconst todayDate = (date) => date.toLocaleDateString(undefined, {\r\n    weekday: \"long\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\"\r\n});\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <Wrapper>\r\n            Dzisiejsza data: {todayDate(date)}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import { Form } from './Form';\r\nimport { Result } from \"./Result\";\r\nimport { Wrapper } from './styled';\r\nimport { Clock } from \"./Clock\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Clock />\r\n      <Form />\r\n      <Result\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { theme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n    \r\n    color: {\r\n        cello: \"#1B445F\",\r\n        white: \"#fff\",\r\n        red: \"#f90011\",\r\n        blue: \"#0000FF\",\r\n        crimson: \"#db143c\",\r\n    },\r\n};"],"sourceRoot":""}